
<!--  -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../part/head.ejs') %>
    <%- include('../part/bootstrapCSS.ejs') %>
  </head>
  <body class="on-loading">
    <%- include('../part/bootstrapJS.ejs') %>
    <script src="https://kit.fontawesome.com/071ea1fa85.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.1.1/dist/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.6/Chart.min.js"></script>
    <%- include('../part/loading.ejs') %>
    
    <style>
::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: white;
  opacity: 1; /* Firefox */
}

:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: white;
}

::-ms-input-placeholder { /* Microsoft Edge */
  color: white;
}    
    </style>
    
<div class="container-fluid">
  <div class="row">
    <!-- sidebar -->
    
    <%- include("../part/navbar-dashboard.ejs") %>
    
    <!-- overlay to close sidebar on small screens -->
    <div class="w-100 vh-100 position-fixed overlay d-none" id="sidebar-overlay"></div>
    <!-- note: in the layout margin auto is the key as sidebar is fixed -->
    <div class="col-md-9 col-lg-10 ml-md-auto px-0">
      <!-- top nav -->
      <nav class="w-100 d-flex py-2 mb-4 shadow-sm">
        <!-- close sidebar -->
        <button class="btn py-0 d-lg-none" id="open-sidebar">
          <i class="fa fa-bars text-primary" style="font-size: 30px;"></i>
        </button>
        <div class="dropdown ml-auto">
          <button class="btn py-0 d-flex align-items-center" id="logout-dropdown" data-toggle="dropdown" aria-expanded="false">
            <span class="fas fa-user-circle text-primary h4"></span>
            <span class="fa fa-chevron-down ml-1 mb-2 small text-primary "></span>
          </button>
          <div class="dropdown-menu dropdown-menu-right border-0 shadow-sm" aria-labelledby="logout-dropdown" style="box-shadow: 0px 0px 12px 3px rgb(0 0 0 / 50%) !important;">
      <% if (req.user) { %>
            <a class="dropdown-item" href="/account"><%= req.user.username %></a>
      <% } else { %>
            <a class="dropdown-item" href="/login">Login</a>
      <% } %>            
            <a class="dropdown-item" href="/">Home</a>
            <a class="dropdown-item" href="/invite?permission=8">Invite</a>
            <a class="dropdown-item" href="/support">Support</a>
          </div>
        </div>
      </nav>
      <!-- main content -->
      <main class="container-fluid">
        <div class="jumbotron jumbotron-fluid rounded bg-white my-embed">
  <div class="container">
    <p class="lead text-muted"><strong><%= guild.name %></strong></p>
  </div>
</div>               
       <form method="POST" id="formnya" onchange="save()">
<div class="snackbar">
<div class="pop-up">
  <span style="color: white; position: initial; margin-right: auto; white-space: nowrap; text-overflow: ellipsis; overflow: hidden;">Careful, you have unsaved changes</span>
  <button type="reset" onclick="resetFORM()" class="pop pop-up-1">Reset</button>
  <button type="submit" class="pop pop-up-2">Save</button>
</div>  
</div>         
        <section>         
          <div class="col-md-6 col-lg-4" style="width: 100%; height: 100%; padding-right: 0px; max-width: 100% !important; max-height: 100% !important; padding-left: 0px;">
            <article class="p-4 rounded my-embed mb-4" style="padding: 15px !important; color: white !important;">
              <h3>Anti Link <label class="switch"><input type="checkbox" name="anti-link" <%= enable_ ? 'checked="checked"' : "" %></input><span class="slider round"></span></label></h3>
              <h4 class="my-embed-warning">admin are not affected</h4>   
            </article>
          </div> 
          <div class="col-md-6 col-lg-4" style="width: 100%; height: 100%; padding-right: 0px; max-width: 100% !important; max-height: 100% !important; padding-left: 0px;">
            <article class="p-4 rounded my-embed mb-4" style="padding: 15px !important; color: white !important;">
              <h3>Badwords <label class="switch"><input id="badwordCheck" onchange="refreshDescription()" type="checkbox" name="badwords" <%= enable__ ? 'checked="checked"' : "" %></input><span class="slider round"></span></label></h3>
              <h4 class="my-embed-warning">admin are not affected</h4>
              <div class="my-embed-description" id="badwordDescription">
            <div class="tags-input" data-name="tags-input">
                <!--<span class="tag">CSS<span class="close"></span></span>
                <span class="tag">JavaScript<span class="close"></span></span>
                <span class="tag">HTML<span class="close"></span></span>-->
            </div>
              </div>
            </article>
          </div>           
        </section>
    </form>
      </main>
    </div>
  </div>
</div>
    <script>
      refreshDescription();
      
      function refreshDescription() {
  // Get the checkbox
  var checkBox = document.getElementById("badwordCheck");
  // Get the output text
  var text = document.getElementById("badwordDescription");

  // If the checkbox is checked, display the output text
  if (checkBox.checked == true){
    text.style.display = "block";
  } else {
    text.style.display = "none";
  }
      }
      
[].forEach.call(document.getElementsByClassName('tags-input'), function (el) {
    let hiddenInput = document.createElement('input'),
        mainInput = document.createElement('input'),
        tags = [];
  
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', el.getAttribute('data-name'));

    mainInput.setAttribute('type', 'text');
    mainInput.setAttribute('placeholder', 'add word');
    mainInput.classList.add('main-input');
    mainInput.addEventListener('input', function () {
        let enteredTags = mainInput.value.split(',');
        if (enteredTags.length > 1) {
            enteredTags.forEach(function (t) {
                let filteredTag = filterTag(t);
                if (filteredTag.length > 0) {
                  if (tags.find(x => x.text.toLowerCase() === filteredTag.toLowerCase())) return alert("Cannot duplicate text.")
                    addTag(filteredTag);
                }
            });
            mainInput.value = '';
        }
    });

    mainInput.addEventListener('keydown', function (e) {
        let keyCode = e.which || e.keyCode;
        if (keyCode === 8 && mainInput.value.length === 0 && tags.length > 0) {
            removeTag(tags.length - 1);
        }
    });
  
    mainInput.addEventListener("keyup", function (e) {
      let keyCode = e.which || e.keyCode;
      if (keyCode === 13) {
        let enteredTags = mainInput.value.split(',');

            enteredTags.forEach(function (t) {
                let filteredTag = filterTag(t);
                if (filteredTag.length > 0) {
                  if (tags.find(x => x.text.toLowerCase() === filteredTag.toLowerCase())) return alert("Cannot duplicate text.")
                    addTag(filteredTag);
                }
            });
            mainInput.value = '';
           
        }
      save();
    });
  
    let noteMsg = document.createElement("small");
    noteMsg.setAttribute("style", "color: white; font-weight: bold;");
    noteMsg.textContent = "*to add another word, type , or enter"
    el.appendChild(mainInput);
    el.appendChild(hiddenInput);
    el.appendChild(noteMsg)

    <% if (badwordList.List[0]) { %>
    <% badwordList.List.map(word => { %>
    addTag('<%= word %>')
    <% }) %>
    <% } %>
  
    function addTag (text) {
        let tag = {
            text: text,
            element: document.createElement('span'),
            hiddenElement: document.createElement('input')
        };
      
        tag.hiddenElement.setAttribute("type", "hidden");
        tag.hiddenElement.setAttribute("name", 'badwordsList[]');
        tag.hiddenElement.setAttribute("value", tag.text);
        tag.element.classList.add('tag-item');
        tag.element.textContent = tag.text;
        tag.element.setAttribute("id", `${tag.text}`)

        let closeBtn = document.createElement('span');
        closeBtn.classList.add('fa');
        closeBtn.classList.add('fa-close');
        closeBtn.classList.add('closebtn');
        closeBtn.addEventListener('click', function () {
            removeTag(tags.indexOf(tag));
        });
        tag.element.appendChild(closeBtn);
        tag.element.appendChild(tag.hiddenElement);

        tags.push(tag);

        el.insertBefore(tag.element, mainInput);

        refreshTags();
    }
  
    function removeTag (index) {
        let tag = tags[index];
        tags.splice(index, 1);
        el.removeChild(tag.element);
        refreshTags();
      save();
    }

    function refreshTags () {
        let tagsList = [];
        tags.forEach(function (t) {
            tagsList.push(t.text);
        });
        hiddenInput.value = tagsList.join(',');
    }

    function filterTag (tag) {
        return tag.toLowerCase();
    }
});      
     
      
      let els = document.getElementsByClassName('tags-input');
    function removeTagManual(id, id2) {
      let tag = document.getElementById(id);
      if (!tag) return;
      
      let hiddenTag = document.getElementById(id2);
      if (!hiddenTag) return;
      
      els.removeChild(tag);
      els.removeChild(hiddenTag);
      refreshTags();
    }      
    </script>
<!--     <script>
$(window).resize(function() {
	var path = $(this);
	var contW = path.width();
	if(contW >= 769){
    $('.content').css('margin-left', '220px');
	}else{
    $('.content').css('margin-left', '0px');
	}
});

$(document).ready(function() {
	$(".side-panel-toggle").click(function(e) {
		e.preventDefault();
    var marginLeft = $('.content').css('margin-left');
    if (marginLeft === '220px') {
      $('.content').css('margin-left', '0px');
    } else {
      $('.content').css('margin-left', '220px');
    }
	});
});    
    </script> -->
    <script>
      let form = $('#formnya')
      let TheForm = $('#thebtn')
      let resetBTN = $('.snackbar');
      let embedSave = $("#save-list")
      TheForm.hide()
      resetBTN.hide()
      embedSave.hide();
      
      form.on('keyup keypress', function(e) {
  var keyCode = e.keyCode || e.which;
  if (keyCode === 13) { 
    e.preventDefault();
    return false;
  }
});
      
      async function save() {
      embedSave.show();
      TheForm.show();
      resetBTN.show();
      }
      
      async function resetFORM() {
        form.trigger("reset");
        TheForm.hide();
        resetBTN.hide();
        embedSave.hide();
        refreshDescription();
        location.reload();
      }   
    </script>    
<script>
$(document).ready(()=>{
  
  $('#open-sidebar').click(()=>{
     
      // add class active on #sidebar
      $('#sidebar').addClass('active');
      
      // show sidebar overlay
      $('#sidebar-overlay').removeClass('d-none');
    
   });
  
  
   $('#sidebar-overlay').click(function(){
     
      // add class active on #sidebar
      $('#sidebar').removeClass('active');
      
      // show sidebar overlay
      $(this).addClass('d-none');
    
   });
  
   $('#sidebar-remove-overlay').click(function(){
     
      // add class active on #sidebar
      $('#sidebar').removeClass('active');
     
     $("#sidebar-overlay").addClass('d-none');
    
   });  
  
});  
    </script>
  </body>
</html>